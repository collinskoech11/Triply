import e,{createContext as n,useContext as t,useState as r,useEffect as o,useRef as i,Fragment as a}from"react";import{useController as c,useForm as d,FormProvider as s,useFormContext as u}from"react-hook-form";import{z as l,ZodFirstPartyTypeKind as f}from"zod";import{zodResolver as p}from"@hookform/resolvers/zod";const m="_rtf_id";function y(e){return m in e._def}function h(e,n){return function(e,n){for(const t in n)e._def[t]=n[t];return e}(e.brand(),{[m]:n})}function b(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{d(r.next(e))}catch(e){i(e)}}function c(e){try{d(r.throw(e))}catch(e){i(e)}}function d(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,c)}d((r=r.apply(e,n||[])).next())}))}const v=[l.ZodFirstPartyTypeKind.ZodOptional,l.ZodFirstPartyTypeKind.ZodNullable,l.ZodFirstPartyTypeKind.ZodBranded,l.ZodFirstPartyTypeKind.ZodDefault,l.ZodFirstPartyTypeKind.ZodLazy],_=new Set(v);function g(e){throw new Error("[assertNever] Unexpected value: "+e)}function O(e){return _.has(e)}function j(e){let n=e,t=null;for(;O(n._def.typeName);)switch(y(n)&&(t=n._def[m]),n._def.typeName){case l.ZodFirstPartyTypeKind.ZodOptional:n=n._def.innerType;break;case l.ZodFirstPartyTypeKind.ZodBranded:n=n._def.type;break;case l.ZodFirstPartyTypeKind.ZodNullable:case l.ZodFirstPartyTypeKind.ZodDefault:n=n._def.innerType;break;case l.ZodFirstPartyTypeKind.ZodLazy:n=n._def.getter();break;default:g(n._def.typeName)}let r=null;return y(n)&&(r=n._def[m]),{type:n,[m]:r||t}}function Z(e){return e._def.typeName===f.ZodEffects?e._def.schema:e}function E(e,n,t){let{type:r,_rtf_id:o}=j(e),{type:i,_rtf_id:a}=j(n);if(t.has(r)&&t.has(i))return!0;if(t.add(r),t.add(i),o||a)return o===a;if(r._def.typeName!==i._def.typeName)return!1;if(r._def.typeName===f.ZodArray&&i._def.typeName===f.ZodArray)return!!E(r._def.type,i._def.type,t);if(r._def.typeName===f.ZodSet&&i._def.typeName===f.ZodSet)return!!E(r._def.valueType,i._def.valueType,t);if(r._def.typeName===f.ZodMap&&i._def.typeName===f.ZodMap)return!(!E(r._def.keyType,i._def.keyType,t)||!E(r._def.valueType,i._def.valueType,t));if(r._def.typeName===f.ZodRecord&&i._def.typeName===f.ZodRecord)return!!E(r._def.valueType,i._def.valueType,t);if(r._def.typeName===f.ZodTuple&&i._def.typeName===f.ZodTuple){const e=r._def.items,n=i._def.items;if(e.length!==n.length)return!1;for(let r=0;r<e.length;r++)if(!E(e[r],n[r],t))return!1;return!0}if(r._def.typeName===f.ZodObject&&i._def.typeName===f.ZodObject){const e=r._def.shape(),n=i._def.shape();if(!e||!n)return!e&&!n;const o=Object.keys(e),a=Object.keys(n),d=new Set(o),s=new Set(a);for(const e of a)if(!d.has(e))return!1;for(const e of o)if(!s.has(e))return!1;for(var c of o){const r=e[c],o=n[c];if(!o||!E(r,o,t))return!1}}return!0}function w(e,n){return E(e,n,new Set)}function T(e,n){return e._def.typeName===f[n]}const F=" // ";function N(e){if(!e)return;const[n,...t]=e.split(F).map((e=>e.trim())),r=t.join(F);return{label:n,placeholder:r||void 0}}function P(e){if(e._def.typeName===l.ZodFirstPartyTypeKind.ZodEnum)return e._def.values}const S=l.object({}),C=l.object({message:l.string(),type:l.string()});function V(e){if(!function(e){return S.safeParse(e).success}(e))return;if(function(e){return C.safeParse(e).success}(e))return{errorMessage:e.message};const n={};for(const t in e)n[t]=V(e[t]);return n}const U=n(null);function x({name:n,control:t,children:r,label:o,placeholder:i,enumValues:a,zodType:c,addToCoerceUndefined:d,removeFromCoerceUndefined:s}){return e.createElement(U.Provider,{value:{control:t,name:n,label:o,placeholder:i,enumValues:a,zodType:c,addToCoerceUndefined:d,removeFromCoerceUndefined:s}},r)}function D(){const e=t(U);return null==e?void 0:e.name}function k(e){const n=t(U);if(!n)throw Error(`${e} must be called from within a FieldContextProvider... if you use this hook, the component must be rendered by @ts-react/form.`);return n}function z(){const e=k("useTsController"),n=c(e),{fieldState:t,field:{onChange:i,value:a}}=n,[d,s]=r(!1);return o((()=>{a&&d&&(s(!1),e.removeFromCoerceUndefined(e.name))}),[a]),Object.assign(Object.assign({},n),{error:V(t.error),field:Object.assign(Object.assign({},n.field),{value:d?void 0:n.field.value,onChange:function(n){void 0===n?(s(!0),e.addToCoerceUndefined(e.name)):(s(!1),e.removeFromCoerceUndefined(e.name),i(n))}})})}function $(e,n){return`No ${e} found when calling ${n}. Either pass it as a prop or pass it using the zod .describe() syntax.`}function K(){const{label:e,placeholder:n}=k("useReqDescription");return{label:e,placeholder:n}}function I(){const{label:e,placeholder:n}=k("useReqDescription");if(!e)throw new Error($("label","useReqDescription"));if(!n)throw new Error($("placeholder","useReqDescription"));return{label:e,placeholder:n}}function R(){const{enumValues:e}=k("useEnumValues");if(!e)throw new Error("Enum values not passed. Any component that calls useEnumValues should be rendered from an '.enum()' zod field.");return e}function A(e){const{type:n,_rtf_id:t}=j(e);return{type:n,zodType:e,uniqueId:null!=t?t:void 0,isOptional:e.isOptional(),isNullable:e.isNullable(),defaultValue:function(){const n=e._def;if(t=n,Boolean(t&&"object"==typeof t&&"defaultValue"in t&&"function"==typeof t.defaultValue)){return n.defaultValue()}var t}()}}function L(e){const{zodType:n,label:t,placeholder:r}=k(e),o=A(n);return Object.assign(Object.assign({},o),{label:t,placeholder:r})}function M(){return L("useFieldInfo")}function q(e,n,t){const r=L(t);const o=function(){const{type:n}=r;if("ZodArray"!==e&&T(n,"ZodArray")){return n.element}return n}();if(!T(o,e))throw new Error(function(e,{expectedType:n,receivedType:t}){return`Make sure that the '${e}' hook is being called inside of a custom form component which matches the correct type.\n  The expected type is '${n}' but the received type was '${t}'`}(t,{expectedType:e,receivedType:o._def.typeName}));return Object.assign(Object.assign({},function(e,n){return Object.entries(n).reduce(((n,[t])=>{const r=e[t];return"string"!=typeof r&&"number"!=typeof r&&"boolean"!=typeof r&&"bigint"!=typeof r&&void 0!==r||(n[t]=r),n}),{})}(o,n)),r)}function B(){return q("ZodString",{description:!0,isCUID:!0,isCUID2:!0,isDatetime:!0,isEmail:!0,isEmoji:!0,isIP:!0,isULID:!0,isURL:!0,isUUID:!0,maxLength:!0,minLength:!0},"useStringFieldInfo")}function G(){const e=q("ZodDate",{description:!0,maxDate:!0,minDate:!0},"useDateFieldInfo");return Object.assign(Object.assign({},e),{maxDate:e.type.maxDate,minDate:e.type.minDate})}function H(){return q("ZodNumber",{description:!0,isFinite:!0,isInt:!0,maxValue:!0,minValue:!0},"useNumberFieldInfo")}const J={enum:!1,useEnum:!1,duplicateSchema:!1};function Q(){var e;J.duplicateSchema||(J.duplicateSchema=!0,e="Found duplicate zod schema in zod-component mapping. Each zod type in the mapping must be unique, if you need to map multiple of the same types to different schemas use createUniqueFieldSchema.",console.warn(`@ts-react/form: ${e}`))}const W=[["name","name"],["control","control"],["enumValues","enumValues"]];function X(e,n){return Y(e,n)[0]}function Y(n,t){var r;const c=n.map((e=>e[0]));!function(e){var n=e.flatMap(((n,t)=>e.slice(t+1).map((e=>[n,e]))));for(const[e,t]of n)w(e,t)&&Q()}(c),function(e){let n=new Set;for(const t of e)if(y(t)){if(n.has(t._def[m]))throw new Error(`Duplicate id passed to createFieldSchema: ${t._def[m]}. Ensure that each id is only being used once and that createFieldSchema is only called at the top level.`);n.add(t._def[m])}}(c);const l=function(e){const n={};for(const[t,r]of e)n[t]=r;return n}(null!==(r=null==t?void 0:t.propsMap)&&void 0!==r?r:W),f=(null==t?void 0:t.FormComponent)||"form";function h({schema:t,props:r,schemaKey:o,form:{control:i,getValues:c},namePrefix:d,submitter:s}){const u=[d,_(o)].filter(Boolean).join("number"==typeof o?"":".");return function t(r,o,c,d){var u,f,p,m,y;const h=Z(r),b=function(e,n){for(const t of n)if(w(e,t[0]))return t[1]}(h,n);if(!b){if(re(h)){const e=h._def.shape();return Object.entries(e).reduce(((e,[n,r])=>(e[n]=t(r,o&&o[n]?o[n]:void 0,`${c}.${n}`,d&&d[n]),e)),{})}if(oe(h))return(null!==(u=d)&&void 0!==u?u:[]).map(((e,n)=>t(h.element,o,`${c}[${n}]`,e)));throw new Error((v=c.toString(),`No matching zod schema for type \`${h._def.typeName}\` found in mapping for property \`${v}\`. Make sure there's a matching zod schema for every property in your schema.`))}var v;const _=function(e){const n=j(e),t=function(e){let n=e;if(n._def.description)return n._def.description;for(;"unwrap"in n;)if(n=n.unwrap(),n._def.description)return n._def.description}(e);return{description:N(t),enumValues:P(n.type)}}(h),{beforeElement:g,afterElement:O}=null!=o?o:{},E=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},l.name&&{[l.name]:c}),l.control&&{[l.control]:i}),l.enumValues&&{[l.enumValues]:_.enumValues}),l.descriptionLabel&&{[l.descriptionLabel]:null===(f=_.description)||void 0===f?void 0:f.label}),l.descriptionPlaceholder&&{[l.descriptionPlaceholder]:null===(p=_.description)||void 0===p?void 0:p.placeholder}),o),T=null===(m=_.description)||void 0===m?void 0:m.label,F=null===(y=_.description)||void 0===y?void 0:y.placeholder;return e.createElement(a,{key:c},g,e.createElement(x,{control:i,name:c,label:T,zodType:h,placeholder:F,enumValues:_.enumValues,addToCoerceUndefined:s.addToCoerceUndefined,removeFromCoerceUndefined:s.removeFromCoerceUndefined},e.createElement(b,Object.assign({key:c},E))),O)}(t,r,u,c()[u])}function v({schema:n,props:t,children:r,schemaKey:o}){const i=u(),a=D(),c=ne();const d=function(e,n){const t=Z(e)._def.shape();return Object.entries(t).reduce(((e,[t,r])=>{const d=t.toString(),s=n&&n[t]?n[t]:void 0;return e[d]=h({form:i,schema:r,props:s,namePrefix:a,submitter:c,schemaKey:[_(o),d].filter(Boolean).join(".")}),e}),{})}(n,t);return e.createElement(e.Fragment,null,e.createElement(g,{renderedFields:d,customChildRenderProp:r}))}function _(e){return"number"==typeof e?`[${e}]`:e}function g({customChildRenderProp:n,renderedFields:t}){return e.createElement(e.Fragment,null,n?n(t):ie(t))}return[function({schema:n,onSubmit:t,props:r,formProps:a,defaultValues:c,renderAfter:u,renderBefore:l,form:m,children:y}){if(!!i(m).current!=!!m)throw new Error("useFormResult prop changed - its value shouldn't changed during the lifetime of the component.");const h=p(n),_=(()=>{if(m)return m;return d({resolver:h,defaultValues:c})})();o((()=>{m&&c&&m.reset(c)}),[]);const{handleSubmit:g,setError:O}=_,j=function({resolver:e,onSubmit:n,setError:t}){const r=i(new Set);function o(e){r.current.add(e)}function a(e){r.current.delete(e)}function c(e){const n=Object.assign({},e);for(const e of r.current)delete n[e];return n}function d(r){return e(c(r),{},{}).then((e=>b(this,void 0,void 0,(function*(){const r=Object.keys(e.errors);if(r.length)for(const n of r)t(n,e.errors[n]);else yield n(e.values)}))))}return{submit:d,removeUndefined:c,removeFromCoerceUndefined:a,addToCoerceUndefined:o}}({resolver:h,onSubmit:t,setError:O}),Z=g(j.submit);return e.createElement(s,Object.assign({},_),e.createElement(te,Object.assign({},j),e.createElement(f,Object.assign({},a,{onSubmit:Z}),null==u?void 0:u({submit:Z}),e.createElement(v,Object.assign({},{schema:n,props:r,children:y})),null==l?void 0:l({submit:Z}))))},v,function(n){return e.createElement(e.Fragment,null,ie(h(Object.assign(Object.assign({},n),{props:n.props,form:u(),namePrefix:D(),submitter:ne()}))))}]}const ee=n(null);function ne(){const e=t(ee);if(!e)throw new Error("useSubmitterContext must be used within a SubmitterContextProvider");return e}function te(n){var{children:t}=n,r=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)n.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(t[r[o]]=e[r[o]])}return t}(n,["children"]);return e.createElement(ee.Provider,{value:r,children:t})}const re=e=>e._def.typeName===f.ZodObject,oe=e=>e._def.typeName===f.ZodArray;function ie(n){return Array.isArray(n)?n.flatMap((e=>ie(e))):"object"!=typeof n||null===n||e.isValidElement(n)?[n]:Object.values(n).reduce(((e,n)=>e.concat(ie(n))),[])}export{X as createTsForm,Y as createTsFormAndFragment,h as createUniqueFieldSchema,G as useDateFieldInfo,K as useDescription,R as useEnumValues,M as useFieldInfo,D as useMaybeFieldName,H as useNumberFieldInfo,I as useReqDescription,B as useStringFieldInfo,z as useTsController};
